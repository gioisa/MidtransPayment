//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Microsoft.AspNetCore.Mvc;
using Midtrans.Payment.Shared.Attributes;
using Midtrans.Payment.Core.MidtransResponseTransaction.Query;
using Midtrans.Payment.Core.Request;
using Midtrans.Payment.Core.MidtransResponseTransaction.Command;
using Midtrans.Payment.Infrastructure.Mail.Object;
using Midtrans.Payment.Core.MidtransResponseTransaction.Object;
using Microsoft.AspNetCore.Authorization;

namespace Midtrans.Payment.API.Controllers
{
    public partial class MidtransResponseTransactionController : BaseController<MidtransResponseTransactionController>
    {
        [HttpGet(template: "get/{id}")]
        public async Task<IActionResult> GetById(Guid id)
        {
            return Wrapper(await _mediator.Send(new GetMidtransResponseTransactionByIdRequest() { Id = id }));
        }

        [HttpPost(template: "list")]
        public async Task<IActionResult> List([FromBody] ListRequest request)
        {
            var list_request = _mapper.Map<GetMidtransResponseTransactionListRequest>(request);
            return Wrapper(await _mediator.Send(list_request));
        }

        [HttpPost(template: "add")]
        public async Task<IActionResult> Add([FromBody] MidtransResponseTransactionRequest request)
        {
            var add_request = _mapper.Map<AddMidtransResponseTransactionRequest>(request);
            add_request.Inputer = Inputer;
            return Wrapper(await _mediator.Send(add_request));
        }

        [HttpPut(template: "edit/{id}")]
        public async Task<IActionResult> Edit(Guid id, [FromBody] MidtransResponseTransactionRequest request)
        {
            var edit_request = _mapper.Map<EditMidtransResponseTransactionRequest>(request);
            edit_request.Id = id;
            edit_request.Inputer = Inputer;
            return Wrapper(await _mediator.Send(edit_request));
        }

        [HttpDelete(template: "delete/{id}")]
        public async Task<IActionResult> Delete(Guid id)
        {
            return Wrapper(await _mediator.Send(new DeleteMidtransResponseTransactionRequest() { Id = id, Inputer = Inputer }));
        }

        [AllowAnonymous]
        [HttpPost(template: "payment/handler")]
        public async Task<IActionResult> AutoConfirmationPayment([FromBody] PaymentTransactionRequest request)
        {
            var add_request = _mapper.Map<PaymentMidtransTransactionRequest>(request);
            return Wrapper(await _mediator.Send(add_request));
        }

        
    }
}

